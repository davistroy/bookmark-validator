[tool:pytest]
# Pytest configuration for bookmark processor tests

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Output options
addopts = 
    -v
    --tb=short
    --strict-markers
    --disable-warnings
    --color=yes
    --cov=bookmark_processor
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-report=xml
    --cov-fail-under=80

# Test markers
markers =
    unit: Unit tests for individual components
    integration: Integration tests for complete workflows
    slow: Tests that take longer to run (> 5 seconds)
    network: Tests that require network access (mocked)
    ai: Tests related to AI processing functionality
    security: Security-related tests
    performance: Performance and load tests
    mock: Tests that heavily rely on mocking
    parametrize: Parameterized tests with multiple inputs

# Minimum version
minversion = 7.0

# Test timeout (in seconds)
timeout = 300

# Asyncio configuration
asyncio_mode = auto

# Logging configuration for tests
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Console output width
console_output_style = progress

# Test session timeout (30 minutes)
session_timeout = 1800

# Ignore certain warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore:.*urllib3.*:UserWarning
    ignore::pytest.PytestUnraisableExceptionWarning
    ignore::ResourceWarning

# Pytest-mock configuration
mock_use_standalone_module = true

# Coverage configuration
[coverage:run]
source = bookmark_processor
omit = 
    */tests/*
    */test_*
    */conftest.py
    */venv/*
    */build/*
    */dist/*
    */__pycache__/*
    */main.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

[coverage:html]
directory = htmlcov
title = Bookmark Processor Test Coverage Report

[coverage:xml]
output = coverage.xml