# Coverage configuration for bookmark processor
[run]
source = bookmark_processor
omit = 
    */tests/*
    */test_*
    */conftest.py
    */venv/*
    */build/*
    */dist/*
    */__pycache__/*
    */main.py
    */.tox/*
    */node_modules/*
    */migrations/*
    */settings/*

# Include all Python files
include = 
    bookmark_processor/*
    *.py

# Branch coverage for comprehensive testing
branch = True

# Parallel processing support
parallel = True

# Data file location
data_file = .coverage

[report]
# Regexes for lines to exclude from consideration
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover

    # Don't complain about missing debug-only code:
    def __repr__
    if self\.debug

    # Don't complain if tests don't hit defensive assertion code:
    raise AssertionError
    raise NotImplementedError

    # Don't complain if non-runnable code isn't run:
    if 0:
    if __name__ == .__main__.:

    # Don't complain about abstract methods
    @(abc\.)?abstractmethod

    # Don't complain about protocol methods
    class .*\bProtocol\):
    @runtime_checkable

    # Don't complain about platform specific code
    if sys.platform
    if platform.system

    # Don't complain about type checking imports
    if TYPE_CHECKING:
    if typing.TYPE_CHECKING:

# Show missing lines in the report
show_missing = True

# Skip covered files (show only files with missing coverage)
skip_covered = False

# Skip empty files
skip_empty = False

# Precision for coverage percentage
precision = 2

# Sort the report
sort = Cover

# Fail if coverage is below this threshold
fail_under = 80

[html]
directory = htmlcov
title = Bookmark Processor Coverage Report
show_contexts = True

[xml]
output = coverage.xml

[json]
output = coverage.json
show_contexts = True

[paths]
# Paths for combining coverage from different environments
source =
    bookmark_processor/
    */site-packages/bookmark_processor/